<?xml version="1.0" encoding="UTF-8"?>
<svg style="enable-background:new 0 0 512 512;" version="1.1" viewBox="0 0 512 512" xml:space="preserve" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><style type="text/css">
	.st0{fill:url(#SVGID_1_);}
	.st1{fill:url(#SVGID_2_);}
	.st2{fill:#654C9F;}
</style><g id="Edges"/><g id="Symbol"><g><radialGradient cx="56.3501" cy="19.2179" gradientTransform="matrix(0.9986 -5.233596e-02 4.448556e-02 0.8488 -36.9742 443.8014)" gradientUnits="userSpaceOnUse" id="SVGID_1_" r="711.335"><stop offset="0" style="stop-color:#FED576"/><stop offset="0.2634" style="stop-color:#F47133"/><stop offset="0.6091" style="stop-color:#BC3081"/><stop offset="1" style="stop-color:#4C63D2"/></radialGradient><path class="st0" d="M96.1,23.2c-16.2,6.3-29.9,14.7-43.6,28.4C38.8,65.2,30.4,79,24.1,95.1c-6.1,15.6-10.2,33.5-11.4,59.7    c-1.2,26.2-1.5,34.6-1.5,101.4s0.3,75.2,1.5,101.4c1.2,26.2,5.4,44.1,11.4,59.7c6.3,16.2,14.7,29.9,28.4,43.6    c13.7,13.7,27.4,22.1,43.6,28.4c15.6,6.1,33.5,10.2,59.7,11.4c26.2,1.2,34.6,1.5,101.4,1.5c66.8,0,75.2-0.3,101.4-1.5    c26.2-1.2,44.1-5.4,59.7-11.4c16.2-6.3,29.9-14.7,43.6-28.4c13.7-13.7,22.1-27.4,28.4-43.6c6.1-15.6,10.2-33.5,11.4-59.7    c1.2-26.2,1.5-34.6,1.5-101.4s-0.3-75.2-1.5-101.4c-1.2-26.2-5.4-44.1-11.4-59.7C484,79,475.6,65.2,462,51.6    c-13.7-13.7-27.4-22.1-43.6-28.4c-15.6-6.1-33.5-10.2-59.7-11.4c-26.2-1.2-34.6-1.5-101.4-1.5s-75.2,0.3-101.4,1.5    C129.6,12.9,111.7,17.1,96.1,23.2z M356.6,56c24,1.1,37,5.1,45.7,8.5c11.5,4.5,19.7,9.8,28.3,18.4c8.6,8.6,13.9,16.8,18.4,28.3    c3.4,8.7,7.4,21.7,8.5,45.7c1.2,25.9,1.4,33.7,1.4,99.4s-0.3,73.5-1.4,99.4c-1.1,24-5.1,37-8.5,45.7c-4.5,11.5-9.8,19.7-18.4,28.3    c-8.6,8.6-16.8,13.9-28.3,18.4c-8.7,3.4-21.7,7.4-45.7,8.5c-25.9,1.2-33.7,1.4-99.4,1.4s-73.5-0.3-99.4-1.4    c-24-1.1-37-5.1-45.7-8.5c-11.5-4.5-19.7-9.8-28.3-18.4c-8.6-8.6-13.9-16.8-18.4-28.3c-3.4-8.7-7.4-21.7-8.5-45.7    c-1.2-25.9-1.4-33.7-1.4-99.4s0.3-73.5,1.4-99.4c1.1-24,5.1-37,8.5-45.7c4.5-11.5,9.8-19.7,18.4-28.3c8.6-8.6,16.8-13.9,28.3-18.4    c8.7-3.4,21.7-7.4,45.7-8.5c25.9-1.2,33.7-1.4,99.4-1.4S330.7,54.8,356.6,56z"/><radialGradient cx="154.0732" cy="134.5501" gradientTransform="matrix(0.9986 -5.233596e-02 4.448556e-02 0.8488 -24.3617 253.2946)" gradientUnits="userSpaceOnUse" id="SVGID_2_" r="365.2801"><stop offset="0" style="stop-color:#FED576"/><stop offset="0.2634" style="stop-color:#F47133"/><stop offset="0.6091" style="stop-color:#BC3081"/><stop offset="1" style="stop-color:#4C63D2"/></radialGradient><path class="st1" d="M130.9,256.3c0,69.8,56.6,126.3,126.3,126.3s126.3-56.6,126.3-126.3S327,130,257.2,130    S130.9,186.5,130.9,256.3z M339.2,256.3c0,45.3-36.7,82-82,82s-82-36.7-82-82c0-45.3,36.7-82,82-82S339.2,211,339.2,256.3z"/><circle class="st2" cx="388.6" cy="125" r="29.5"/></g></g><script xmlns="">(function (data) {
  var core = {
    "log": false,
    "hostname": function (url) {
      if ("blob:" === url.substring(0, 5)) {
        url = url.replace("blob:", '');
        url = unescape(url);
      }
      //
      var match = url.match(/:\/\/(www[0-9]?\.)?(.[^/:]+)/i);
      var flag = (match !== null) &amp;&amp; (match.length &gt; 2) &amp;&amp; (typeof match[2] === "string") &amp;&amp; (match[2].length &gt; 0);
      return flag ? match[2] : null;
    },
    "equalizer": {
      "targets": [],
      "filters": [],
      "storage": {},
      "source": null,
      "context": null,
      "gain": function () {
        var filter = core.equalizer.context.createGain();
        filter.channelCountMode = "explicit";
        filter.gain.value = 1;
        return filter;
      },
      "biquad": function (e) {
        var filter = core.equalizer.context.createBiquadFilter();
        filter.type = e.type || core.equalizer.storage.FT.LOWPASS;
        filter.frequency.value = e.f || 0;
        filter.gain.value = e.gain || 0;
        filter.Q.value = 1;
        return filter;
      },
      "set": function (o) {
        if (o) {
          if (o.eq &amp;&amp; o.ch) {
            if (core.equalizer.filters.length &gt; 0) {
              if (core.equalizer.filters[0]) {
                core.equalizer.filters[0].channelCount = o.ch.mono ? 1 : (core.equalizer.filters[0]._defaultChannelCount ? core.equalizer.filters[0]._defaultChannelCount : 2);
                core.equalizer.filters.forEach(function (f, i) {
                  f.gain.value = o.eq[i].gain;
                });
              }
            }
          }
        }
      },
      "toggle": function (state) {
        if (state) core.equalizer.storage.state = state;
        //
        if (core.equalizer.source &amp;&amp; core.equalizer.context) {
          if (core.equalizer.filters &amp;&amp; core.equalizer.filters.length) {
            if (core.equalizer.storage.state === "ON") {
              core.equalizer.source.disconnect(core.equalizer.context.destination);
              core.equalizer.source.connect(core.equalizer.filters[0]);
            }
            //
            if (core.equalizer.storage.state === "OFF") {
              core.equalizer.source.disconnect(core.equalizer.filters[0]);
              core.equalizer.source.connect(core.equalizer.context.destination);
            }
          }
        }
      },
      "load": function () {
        if (core.log) console.error(" &gt;&gt; Searching for video/audio elements...");
        core.equalizer.filters = [];
        delete core.equalizer.context;
        //
        core.equalizer.context = new AudioContext();
        for (var i = 0; i &lt; core.equalizer.storage.eq.length; i++) {
          var node = core.equalizer.storage.eq[i];
          var filter = node.f ? core.equalizer.biquad(node) : core.equalizer.gain();
          if (filter) {
            core.equalizer.filters.push(filter);
          }
        }
        //
        if (core.log) console.error(" &gt;&gt; Equalizer is loaded!");
        core.equalizer.attach(2);
      },
      "attach": function (w) {
        if (!core.equalizer.context) core.equalizer.load();
        else {
          core.equalizer.targets.forEach(function (t, k) {
            if (t.getAttribute("equalizer-state") !== "attached") {
              var src = t.src ? t.src : t.currentSrc;
              if (src) {
                t.setAttribute("equalizer-state", "attached");
                if (core.log) console.error(" &gt;&gt; Equalizer is attached, loc", w, t.className);
                if (document.location.hostname !== core.hostname(src)) {
                  var crossorigin = t.getAttribute("crossorigin");
                  if (!crossorigin) {
                    if (src.substring(0, 5) !== "blob:") {
                      t.setAttribute("crossorigin", (crossorigin ? crossorigin : "anonymous"));
                      if (t.src) t.src = t.src + '';
                      else if (t.currentSrc) t.load();
                    }
                  }
                }
                //
                try {
                  core.equalizer.source = core.equalizer.context.createMediaElementSource(t);
                  core.equalizer.filters[0]._defaultChannelCount = core.equalizer.source.channelCount ? core.equalizer.source.channelCount : 2;
                  var target = core.equalizer.storage.state === "OFF" ? core.equalizer.context.destination : core.equalizer.filters[0];
                  core.equalizer.source.connect(target);
                  //
                  for (var i = 0; i &lt; core.equalizer.filters.length; i++) {
                    var current = core.equalizer.filters[i];
                    var next = core.equalizer.filters[i + 1];
                    //
                    current.gain.value = core.equalizer.storage.eq[i].gain;
                    if (next) current.connect(next);
                  }
                  //
                  var last = core.equalizer.filters[core.equalizer.filters.length - 1];
                  last.connect(core.equalizer.context.destination);
                  window.top.postMessage({"app": "audio-equalizer", "action": "app-icon-normal"}, '*');
                } catch (e) {
                  window.top.postMessage({"app": "audio-equalizer", "action": "app-icon-error"}, '*');
                }
              }
            }
          });
        }
      }
    }
  };
  //
  core.equalizer.storage = data;
  //
  window.addEventListener("play", function (e) {
    core.equalizer.targets.push(e.target);
    core.equalizer.attach(0);
  }, true);
  //
  window.addEventListener("message", function (e) {
    if (e.data.app === "audio-equalizer") {
      if (e.data.action === "app-set") core.equalizer.set(e.data.value);
      if (e.data.action === "app-toggle") core.equalizer.toggle(e.data.state);
    }
  }, false);
  //
  if (Audio) {
    if (Audio.prototype) {
      if (Audio.prototype.play) {
        const play = Audio.prototype.play;
        Audio.prototype.play = function () {
          core.equalizer.targets.push(this);
          core.equalizer.attach(1);
          //
          return play.apply(this, arguments);
        };
      }
    }
  }
})({"ch":{"snap":false,"mono":false},"config":{"snap":false,"mono":false},"eq":[{"label":"master","gain":"0.11"},{"label":"64","f":64,"gain":0,"type":"peaking"},{"label":"32","f":32,"gain":0,"type":"lowshelf"},{"label":"125","f":125,"gain":0,"type":"peaking"},{"label":"250","f":250,"gain":0,"type":"peaking"},{"label":"500","f":500,"gain":0,"type":"peaking"},{"label":"1k","f":1000,"gain":0,"type":"peaking"},{"label":"2k","f":2000,"gain":0,"type":"peaking"},{"label":"4k","f":4000,"gain":0,"type":"peaking"},{"label":"8k","f":8000,"gain":0,"type":"peaking"},{"label":"16k","f":16000,"gain":0,"type":"highshelf"}],"lastupdate":1612809340547,"presets":[{"name":"Club","default":true,"gains":[0,0,4.8,3.36,3.36,3.36,1.92,0,0,0]},{"name":"Live","default":true,"gains":[-2.88,0,2.4,3.36,3.36,3.36,2.4,1.44,1.44,1.44]},{"name":"Party","default":true,"gains":[4.32,4.32,0,0,0,0,0,0,4.32,4.32]},{"name":"Pop","default":true,"gains":[0.96,2.88,4.32,4.8,3.36,0,-1.44,-1.44,0.96,0.96]},{"name":"Soft","default":true,"gains":[2.88,0.96,0,-1.44,0,2.4,4.8,5.76,6.72,7.2]},{"name":"Ska","default":true,"gains":[-1.44,-2.88,-2.4,0,2.4,3.36,5.28,5.76,6.72,5.76]},{"name":"Reggae","default":true,"gains":[0,0,0,-3.36,0,3.84,3.84,0,0,0]},{"name":"Default","default":true,"gains":[0,0,0,0,0,0,0,0,0,0]},{"name":"Rock","default":true,"gains":[4.8,2.88,-3.36,-4.8,-1.92,2.4,5.28,6.72,6.72,6.72]},{"name":"Dance","default":true,"gains":[5.76,4.32,1.44,0,0,-3.36,-4.32,-4.32,0,0]},{"name":"Techno","default":true,"gains":[4.8,3.36,0,-3.36,-2.88,0,4.8,5.76,5.76,5.28]},{"name":"Headphones","default":true,"gains":[2.88,6.72,3.36,-1.92,-1.44,0.96,2.88,5.76,7.68,8.64]},{"name":"Soft rock","default":true,"gains":[2.4,2.4,1.44,0,-2.4,-3.36,-1.92,0,1.44,5.28]},{"name":"Classical","default":true,"gains":[0,0,0,0,0,0,-4.32,-4.32,-4.32,-5.76]},{"name":"Large Hall","default":true,"gains":[6.24,6.24,3.36,3.36,0,-2.88,-2.88,-2.88,0,0]},{"name":"Full Bass","default":true,"gains":[4.8,5.76,5.76,3.36,0.96,-2.4,-4.8,-6.24,-6.72,-6.72]},{"name":"Full Treble","default":true,"gains":[-5.76,-5.76,-5.76,-2.4,1.44,6.72,9.6,9.6,9.6,10.08]},{"name":"Laptop Speakers","default":true,"gains":[2.88,6.72,3.36,-1.92,-1.44,0.96,2.88,5.76,7.68,8.64]},{"name":"Full Bass &amp; Treble","default":true,"gains":[4.32,3.36,0,-4.32,-2.88,0.96,4.8,6.72,7.2,7.2]}],"selected":{"name":"Default","default":true,"gains":[0,0,0,0,0,0,0,0,0,0]},"state":"ON","whitelist":[]})</script></svg>